inherited P686FCalcoloFondiMW: TP686FCalcoloFondiMW
  OldCreateOrder = True
  OnDestroy = DataModuleDestroy
  object selP500: TOracleDataSet
    SQL.Strings = (
      'SELECT COD_VALUTA '
      'FROM P500_CUDSETUP P1'
      'WHERE ANNO = (SELECT MAX(ANNO) '
      '              FROM P500_CUDSETUP P2 '
      '              WHERE ANNO <= :Anno '
      '              AND P2.COD_AZIENDA_BASE = P1.COD_AZIENDA_BASE)'
      'AND P1.COD_AZIENDA_BASE = '#39'BASE'#39)
    Optimize = False
    Variables.Data = {
      04000000010000000A0000003A0041004E004E004F0005000000000000000000
      0000}
    OracleDictionary.DefaultValues = True
    QBEDefinition.QBEFieldDefs = {
      050000000C0000000800000041004E004E004F000100000000000A0000005000
      41005200540045000100000000000C0000004E0055004D00450052004F000100
      00000000160000004400450053004300520049005A0049004F004E0045000100
      00000000100000004E0055004D0045005200490043004F000100000000002400
      000043004F0044005F004100520052004F0054004F004E00440041004D004500
      4E0054004F000100000000000E00000046004F0052004D00410054004F000100
      00000000180000004F004D0045005400540049005F00560055004F0054004F00
      010000000000320000005200450047004F004C0041005F00430041004C004300
      4F004C004F005F004100550054004F004D004100540049004300410001000000
      00002C0000005200450047004F004C0041005F00430041004C0043004F004C00
      4F005F004D0041004E00550041004C0045000100000000002600000052004500
      47004F004C0041005F004D004F00440049004600490043004100420049004C00
      45000100000000001000000043004F004D004D0045004E0054004F0001000000
      0000}
    Left = 76
    Top = 143
  end
  object selP050: TOracleDataSet
    SQL.Strings = (
      'SELECT P050.COD_ARROTONDAMENTO,P050.VALORE,P050.TIPO'
      'FROM P050_ARROTONDAMENTI P050 WHERE'
      'P050.COD_VALUTA = :CodValuta AND'
      
        'P050.DECORRENZA = (SELECT MAX(DECORRENZA) FROM P050_ARROTONDAMEN' +
        'TI'
      
        '   WHERE DECORRENZA <= :Decorrenza AND COD_ARROTONDAMENTO = P050' +
        '.COD_ARROTONDAMENTO AND '
      '   COD_VALUTA = P050.COD_VALUTA)')
    Optimize = False
    Variables.Data = {
      0400000002000000160000003A004400450043004F005200520045004E005A00
      41000C0000000000000000000000140000003A0043004F004400560041004C00
      550054004100050000000000000000000000}
    CommitOnPost = False
    Left = 28
    Top = 143
  end
  object delP690: TOracleQuery
    SQL.Strings = (
      'delete P690_fondispeso'
      'where cod_fondo = :COD'
      'and decorrenza_da = :DEC')
    Optimize = False
    Variables.Data = {
      0400000002000000080000003A0043004F004400050000000000000000000000
      080000003A004400450043000C0000000000000000000000}
    Left = 32
    Top = 32
  end
  object selP688Conta: TOracleQuery
    SQL.Strings = (
      'select count(*) '
      ' from P684_FONDI P684, P688_RISDESTDET P688'
      'where P684.cod_fondo in (:COD)'
      '  and P684.decorrenza_da <= :FINE'
      '  and P684.decorrenza_a >= :INIZIO'
      '  and p684.cod_fondo = p688.cod_fondo'
      '  and p684.decorrenza_da = p688.decorrenza_da'
      '  and p688.class_voce = '#39'D'#39
      '  and P688.CODICI_ACCORPAMENTOVOCI IS NOT NULL')
    Optimize = False
    Variables.Data = {
      0400000003000000080000003A0043004F004400010000000000000000000000
      0A0000003A00460049004E0045000C00000000000000000000000E0000003A00
      49004E0049005A0049004F000C0000000000000000000000}
    Left = 296
    Top = 88
  end
  object selP688: TOracleDataSet
    SQL.Strings = (
      
        'select P684.DECORRENZA_A, P684.FILTRO_DIPENDENTI FILTROP684, P68' +
        '8.*, P688.ROWID'
      'from P684_FONDI P684, P688_RISDESTDET P688'
      'where P684.COD_FONDO = P688.COD_FONDO'
      'and P684.DECORRENZA_DA = P688.DECORRENZA_DA'
      'and P684.COD_FONDO = :COD'
      'and P684.DECORRENZA_DA <= :FINE'
      'and P684.DECORRENZA_A >= :INIZIO'
      'and P688.CLASS_VOCE = '#39'D'#39
      'and P688.CODICI_ACCORPAMENTOVOCI IS NOT NULL'
      
        'order by P684.DECORRENZA_DA, P688.COD_VOCE_GEN, P688.COD_VOCE_DE' +
        'T')
    Optimize = False
    Variables.Data = {
      0400000003000000080000003A0043004F004400050000000000000000000000
      0A0000003A00460049004E0045000C00000000000000000000000E0000003A00
      49004E0049005A0049004F000C0000000000000000000000}
    Left = 208
    Top = 32
  end
  object selP442: TOracleDataSet
    SQL.Strings = (
      
        'SELECT P441.PROGRESSIVO, P441.DATA_RETRIBUZIONE, P442.COD_CONTRA' +
        'TTO, P442.COD_VOCE, SUM(P442.IMPORTO * P216.PERCENTUALE / 100) I' +
        'MPORTO'
      
        'FROM T430_STORICO T430, P430_ANAGRAFICO P430, P442_CEDOLINOVOCI ' +
        'P442, P441_CEDOLINO P441, P216_ACCORPAMENTOVOCI P216'
      'WHERE P430.PROGRESSIVO = T430.PROGRESSIVO'
      'AND :DataCalcolo BETWEEN T430.DATADECORRENZA AND T430.DATAFINE'
      
        'AND :DataCalcolo BETWEEN P430.DECORRENZA AND P430.DECORRENZA_FIN' +
        'E'
      'AND (:FiltroDipendenti) '
      'AND P441.PROGRESSIVO=T430.PROGRESSIVO'
      'AND P441.DATA_CEDOLINO >= :DataInizioCompetenza'
      'AND P441.CHIUSO IN (:StatoCedolini)'
      'AND P442.ID_CEDOLINO = P441.ID_CEDOLINO '
      'AND P441.TIPO_CEDOLINO <> '#39'RP'#39' AND P442.TIPO_RECORD = '#39'M'#39
      
        'AND :DataCalcolo BETWEEN :DataInizioCompetenza AND :DataFineComp' +
        'etenza'
      
        'AND :DataCalcolo BETWEEN P216.DECORRENZA AND P216.DECORRENZA_FIN' +
        'E '
      
        'AND P216.COD_CONTRATTO = P442.COD_CONTRATTO AND P216.COD_VOCE = ' +
        'P442.COD_VOCE AND P216.COD_VOCE_SPECIALE = P442.COD_VOCE_SPECIAL' +
        'E'
      
        'AND LTRIM(RTRIM(P216.COD_TIPOACCORPAMENTOVOCI))||'#39'.'#39'||LTRIM(RTRI' +
        'M(P216.COD_CODICIACCORPAMENTOVOCI)) :Accorpamenti'
      
        'GROUP BY P441.PROGRESSIVO, P441.DATA_RETRIBUZIONE, P442.COD_CONT' +
        'RATTO, P442.COD_VOCE'
      'HAVING SUM(P442.IMPORTO * P216.PERCENTUALE / 100) <> 0'
      
        'ORDER BY P441.DATA_RETRIBUZIONE, P442.COD_CONTRATTO, P442.COD_VO' +
        'CE')
    Optimize = False
    Variables.Data = {
      04000000060000001A0000003A004100430043004F005200500041004D004500
      4E00540049000100000000000000000000001C0000003A005300540041005400
      4F004300450044004F004C0049004E0049000100000000000000000000002A00
      00003A00440041005400410049004E0049005A0049004F0043004F004D005000
      4500540045004E005A0041000C0000000000000000000000260000003A004400
      410054004100460049004E00450043004F004D0050004500540045004E005A00
      41000C0000000000000000000000180000003A00440041005400410043004100
      4C0043004F004C004F00010000000000000000000000220000003A0046004900
      4C00540052004F0044004900500045004E00440045004E005400490001000000
      0000000000000000}
    Left = 288
    Top = 32
  end
  object scrP690: TOracleQuery
    SQL.Strings = (
      'BEGIN'
      '  update p690_fondispeso'
      '  set importo = importo + :importo'
      '  where progressivo = :progressivo'
      '  and cod_fondo = :cod_fondo'
      '  and decorrenza_da = :decorrenza_da'
      '  and class_voce = :class_voce'
      '  and cod_voce_gen = :cod_voce_gen'
      '  and cod_voce_det = :cod_voce_det'
      '  and data_retribuzione = :data_retribuzione'
      '  and cod_contratto = :cod_contratto'
      '  and cod_voce = :cod_voce;'
      '  IF SQL%ROWCOUNT = 0 THEN'
      '    insert into p690_fondispeso'
      
        '      (cod_fondo, decorrenza_da, class_voce, cod_voce_gen, cod_v' +
        'oce_det, data_retribuzione, cod_contratto, cod_voce, importo, pr' +
        'ogressivo)'
      '    values'
      
        '      (:cod_fondo, :decorrenza_da, :class_voce, :cod_voce_gen, :' +
        'cod_voce_det, :data_retribuzione, :cod_contratto, :cod_voce, :im' +
        'porto, :progressivo);'
      '  ELSE  '
      '    delete p690_fondispeso'
      '    where progressivo = :progressivo'
      '    and cod_fondo = :cod_fondo'
      '    and decorrenza_da = :decorrenza_da'
      '    and class_voce = :class_voce'
      '    and cod_voce_gen = :cod_voce_gen'
      '    and cod_voce_det = :cod_voce_det'
      '    and data_retribuzione = :data_retribuzione'
      '    and cod_contratto = :cod_contratto'
      '    and cod_voce = :cod_voce'
      '    and importo = 0;'
      '  END IF;'
      'END;')
    Optimize = False
    Variables.Data = {
      040000000A000000140000003A0043004F0044005F0046004F004E0044004F00
      0500000000000000000000001C0000003A004400450043004F00520052004500
      4E005A0041005F00440041000C0000000000000000000000160000003A004300
      4C004100530053005F0056004F00430045000500000000000000000000001A00
      00003A0043004F0044005F0056004F00430045005F00470045004E0005000000
      00000000000000001A0000003A0043004F0044005F0056004F00430045005F00
      440045005400050000000000000000000000240000003A004400410054004100
      5F0052004500540052004900420055005A0049004F004E0045000C0000000000
      0000000000001C0000003A0043004F0044005F0043004F004E00540052004100
      540054004F00050000000000000000000000120000003A0043004F0044005F00
      56004F0043004500050000000000000000000000100000003A0049004D005000
      4F00520054004F00040000000000000000000000180000003A00500052004F00
      47005200450053005300490056004F00030000000000000000000000}
    Left = 32
    Top = 88
  end
  object updP684: TOracleQuery
    SQL.Strings = (
      'update P684_FONDI'
      'set data_ultimo_monit = :DTMONIT'
      'where cod_fondo = :COD'
      'and decorrenza_da = :DEC')
    Optimize = False
    Variables.Data = {
      0400000003000000100000003A00440054004D004F004E00490054000C000000
      0000000000000000080000003A0043004F004400050000000000000000000000
      080000003A004400450043000C0000000000000000000000}
    Left = 136
    Top = 88
  end
  object updP688: TOracleQuery
    SQL.Strings = (
      'update P688_RISDESTDET'
      'set importo = :IMP'
      'where cod_fondo = :COD'
      'and decorrenza_da = :DEC'
      'and class_voce = '#39'D'#39
      'and cod_voce_gen = :CODGEN'
      'and cod_voce_det = :CODDET')
    Optimize = False
    Variables.Data = {
      0400000005000000080000003A0043004F004400050000000000000000000000
      080000003A004400450043000C0000000000000000000000080000003A004900
      4D0050000400000000000000000000000E0000003A0043004F00440047004500
      4E000500000000000000000000000E0000003A0043004F004400440045005400
      050000000000000000000000}
    Left = 208
    Top = 88
  end
  object selP684: TOracleDataSet
    SQL.Strings = (
      'SELECT distinct cod_fondo,descrizione FROM P684_FONDI'
      'WHERE DECORRENZA_DA <= :FINE'
      'AND DECORRENZA_A >= :INIZIO'
      'order by cod_fondo')
    Optimize = False
    Variables.Data = {
      04000000020000000A0000003A00460049004E0045000C000000000000000000
      00000E0000003A0049004E0049005A0049004F000C0000000000000000000000}
    Left = 136
    Top = 32
  end
end
